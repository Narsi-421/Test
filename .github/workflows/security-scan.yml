name: Security Scans (SonarQube + Trivy)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  SONAR_PROJECT_KEY: juice-shop
  SONAR_PROJECT_NAME: JuiceShop
  DEFECTDOJO_ENGAGEMENT_ID: 1
  IMAGE_TAG: ${{ github.sha }}

jobs:
  security-scan:
    runs-on: self-hosted

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # --- SONARQUBE SCAN ---
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js 21
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Add SonarScanner to PATH
        run: echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Download SonarQube Issues Report
        run: |
          curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "${{ secrets.SONAR_URL }}/api/issues/search?componentKeys=${{ env.SONAR_PROJECT_KEY }}&resolved=false" \
            -o sonarqube-report.json

      - name: Upload SonarQube Report to DefectDojo
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
            -F "scan_type=SonarQube Scan" \
            -F "engagement=${{ env.DEFECTDOJO_ENGAGEMENT_ID }}" \
            -F "file=@sonarqube-report.json" \
            -F "active=true" \
            -F "verified=true"

      # --- TRIVY SCAN ---
      - name: Build Docker Image for Trivy Scan
        run: docker build -t security-scan:${{ env.IMAGE_TAG }} .

      - name: Run Trivy Scan on Docker Image
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/.trivy-cache:/root/.cache/ \
            -v ${{ github.workspace }}:/root/scan \
            aquasec/trivy:latest \
            image --format json --output /root/scan/trivy-report.json security-scan:${{ env.IMAGE_TAG }}

      - name: Upload Trivy Report to DefectDojo
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
            -F "scan_type=Trivy Scan" \
            -F "engagement=${{ env.DEFECTDOJO_ENGAGEMENT_ID }}" \
            -F "file=@trivy-report.json" \
            -F "active=true" \
            -F "verified=true"

      # --- ARCHIVE REPORTS
      - name: Archive Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-reports
          path: |
            sonarqube-report.json
            trivy-report.json
