name: SonarQube Results to DefectDojo (Filtered & Paginated)

on:
  workflow_dispatch:

env:
  SONAR_PROJECT_KEY: juice-shop
  DEFECTDOJO_ENGAGEMENT_ID: 1

jobs:
  sonar-to-dojo:
    runs-on: self-hosted

    steps:
    - name: Fetch and upload filtered SonarQube issues
      run: |
        mkdir -p sonarqube-pages

        for SEVERITY in BLOCKER CRITICAL MAJOR; do
          PAGE=1
          TOTAL=100
          while [ $TOTAL -eq 100 ]; do
            echo "Fetching $SEVERITY issues page $PAGE"
            FILENAME="sonarqube-pages/${SEVERITY}_page-${PAGE}.json"

            curl -s -u ${{ secrets.SONAR_TOKEN }}: \
              "${{ secrets.SONAR_URL }}/api/issues/search?componentKeys=${{ env.SONAR_PROJECT_KEY }}&resolved=false&severities=$SEVERITY&pageSize=100&p=$PAGE" \
              -o "$FILENAME"

            COUNT=$(jq '.issues | length' "$FILENAME")
            if [ "$COUNT" -eq 0 ]; then
              echo "No more $SEVERITY issues on page $PAGE."
              break
            fi

            echo "Uploading $FILENAME to DefectDojo..."
            curl -s -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
              -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
              -F "scan_type=SonarQube Scan" \
              -F "engagement=${{ env.DEFECTDOJO_ENGAGEMENT_ID }}" \
              -F "file=@$FILENAME" \
              -F "active=true" \
              -F "verified=true"

            PAGE=$((PAGE + 1))
            TOTAL=$COUNT
          done
        done

    - name: Archive SonarQube Issue JSONs
      uses: actions/upload-artifact@v4
      with:
        name: sonarqube-pages
        path: sonarqube-pages/
